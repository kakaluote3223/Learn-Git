git init 							初始化一个git仓库

git add <file(包括后缀)>			文件从工作区添加到暂存区
git commit -m “描述语言”			暂存区所有文件添加到当前分支
git commit 不带参数的命令，Git会启动编辑器来编辑提交留言。
退出操作如下：ESC  --》 退出编辑状态；接着 连续按两次大写字母键 Z

git status 							查看工作区状态
git diff <file(包括后缀)>			查看修改内容
git	log 							查看提交历史
git reflog							查看命令历史
git log --pretty=oneline <file>		查看该文件提交历史	

git reset --hard commit_id(head^;head^^;head~100等)		版本穿梭
git checkout -- <file>				暂存区文件还原到工作区
git reset Head <file>				分支上该文件还原到暂存区
git rm <file>						删除版本库中文件

git remote add origin git@server-name:path/repo-name.git	关联远程库
git	remote	-v						查看远程库及其URL
git remote rm origin(即库的简称)	删除远程库
git push -u origin (分支名)			第一次推送所选分支的所有内容
git push origin (分支名)			推送所选分支的所有内容
例:git clone git@github.com:michaelliao/gitskills.git	克隆远程库

git checkout -b (分支名)			创建并切换到该分支
git branch (分支名)					创建分支
git branch							查看分支
git checkout (分支名)				切换到该分支
git merge (分支名)					将该分支合并到当前所在分支
git branch -d (分支名)				删除分支
git merge --no-ff -m "描述语言”"(分支名)	不以fast forward方式合并分支

git stash 							储存当前工作现场
git stash apply						恢复现场，为git栈中的头备份
git stash pop						恢复现场并把git栈中的头弹出
git stash list 						显示git栈中的备份
git stash clear						清空git栈
git stash apply (节点名)			由该节点的备份恢复现场